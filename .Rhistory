getwd()
prueba =read_excel("C:/Users/carenas/OneDrive - COMISION NACIONAL DE INVESTIGACION CIENTIFICA Y TECNOLOGICA/Escritorio/Prueba/Prueba _CDC.xlsx", sheet= "POSTULACIONES_2015_2023")
names(prueba)
str(prueba)
prueba %>%select(TIPO_BENEFICIARIO)
prueba %>%select(TIPO_BENEFICIARIO) %>%
count("PERSONA NATURAL")
View(prueba)
prueba %>%select(TIPO_BENEFICIARIO) %>%
count("PERSONA NATURAL", "UNIVERSIDADES")
count("PERSONA NATURAL"),
prueba %>%select(TIPO_BENEFICIARIO) %>%
count("PERSONA NATURAL")
count("UNIVERSIDADES")
table(prueba$CODIGO_DEL_PROYECTO)
count(prueba$CODIGO_DEL_PROYECTO)
prueba %>%select(TIPO_BENEFICIARIO) %>%
group_by()
prueba %>%select(TIPO_BENEFICIARIO) %>%
group_by()
prueba %>% %>%
prueba %>%
group_by(SEXO_(COMPENDIO))%>%
count(SUBDIRECCION)
prueba %>%
group_by(AÑO_DE_FALLO)%>%
count(SUBDIRECCION)
prueba %>%
group_by(SUBDIRECCION)%>%
count(AÑO_DE_FALLO)
prueba %>%
group_by(SUBDIRECCION$DISCIPLINA_OECD_(COMPENDIO))%>%
count(AÑO_DE_FALLO)
prueba %>%
group_by(SUBDIRECCION$PROGRAMA)%>%
count(AÑO_DE_FALLO)
prueba %>%
group_by(SUBDIRECCION)%>%
count(AÑO_DE_FALLO)
prueba %>%
group_by(SUBDIRECCION)%>%
count(INFORMACION_PARA_CLASIFICACION_POR_SEXO)
prueba %>%
group_by(SUBDIRECCION)%>%
count(SECTOR_INSTITUCIONAL)
prueba %>%
group_by(SECTOR_INSTITUCIONAL)%>%
count(ESTADO_ACTUALIZADO)
prueba %>%
group_by(SECTOR_INSTITUCIONAL)%>%
count(ESTADO_ACTUALIZADO$UNIVERSIDADES_(COMPENDIO))
prueba %>%
group_by(SECTOR_INSTITUCIONAL)%>%
count(ESTADO_ACTUALIZADO)
Conteo = group_by(SECTOR_INSTITUCIONAL)%>%
summarise(prueba, PROGRAMA)
#Conteo = group_by(SECTOR_INSTITUCIONAL)%>%
summarise(prueba, PROGRAMA)
#Conteo = group_by(SECTOR_INSTITUCIONAL)%>%
summarise(prueba, count(PROGRAMA))
#Conteo = group_by(SECTOR_INSTITUCIONAL)%>%
count(PROGRAMA)
#Conteo = group_by(SECTOR_INSTITUCIONAL)%>%
count(prueba,PROGRAMA)
#Conteo = group_by(SECTOR_INSTITUCIONAL)%>%
count(prueba,MACROZONA_MINCIENCIAS)
#Conteo = group_by(SECTOR_INSTITUCIONAL)%>%
#count(prueba,MACROZONA_MINCIENCIAS)
names(prueba)
prueba %>% group_by(SUBDIRECCION)%>%
count(AÑO_DE_FALLO)
prueba %>% filter(SUBDIRECCION)%>%
group_by(SPI)%>%
count(AÑO_DE_FALLO)
prueba %>% select(SUBDIRECCION)%>%
filter(SPI)%>%
#group_by(SPI)%>%
count(AÑO_DE_FALLO)
prueba %>% group_by(SUBDIRECCION,AÑO_DE_FALLO)%>%
count(ESTADO_PROYECTO_SEGUN_RESOLUCION_DE_FALLO)
prueba %>% group_by(ESTADO_PROYECTO_SEGUN_RESOLUCION_DE_FALLO,AÑO_DE_FALLO)%>%
count(CODIGO_DEL_PROYECTO)
prueba %>% group_by(ESTADO_PROYECTO_SEGUN_RESOLUCION_DE_FALLO,AÑO_DE_FALLO, SUBDIRECCION)%>%
count(CODIGO_DEL_PROYECTO)
prueba %>% group_by(ESTADO_PROYECTO_SEGUN_RESOLUCION_DE_FALLO,AÑO_DE_FALLO, SUBDIRECCION)%>%
length(CODIGO_DEL_PROYECTO)
prueba %>% group_by(ESTADO_PROYECTO_SEGUN_RESOLUCION_DE_FALLO,AÑO_DE_FALLO, SUBDIRECCION)%>%
COUNT(CODIGO_DEL_PROYECTO)
prueba %>% group_by(ESTADO_PROYECTO_SEGUN_RESOLUCION_DE_FALLO,AÑO_DE_FALLO, SUBDIRECCION)%>%
length(CODIGO_DEL_PROYECTO)
prueba %>% group_by(ESTADO_PROYECTO_SEGUN_RESOLUCION_DE_FALLO,AÑO_DE_FALLO, SUBDIRECCION)%>%
count(CODIGO_DEL_PROYECTO)
prueba%>% group_by(CODIGO_DEL_PROYECTO) %>%
summarise(n=n())
prueba%>% group_by(SUBDIRECCION) %>%
summarise(n=n())
prueba%>% group_by(SUBDIRECCION,AÑO_DE_FALLO ) %>%
summarise(n=n())
prueba%>% group_by(SUBDIRECCION,AÑO_DE_FALLO,`ESTADO_(COMPENDIO)` ) %>%
summarise(n=n())
prueba%>% group_by(SUBDIRECCION,AÑO_DE_FALLO$2015,`ESTADO_(COMPENDIO)`) %>%
prueba%>% group_by(SUBDIRECCION,AÑO_DE_FALLO==2015,`ESTADO_(COMPENDIO)`) %>%
summarise(n=n())
prueba%>% group_by(SUBDIRECCION,AÑO_DE_FALLO,`ESTADO_(COMPENDIO)`) %>%
summarise(n=n())
prueba%>% group_by(SUBDIRECCION,AÑO_DE_FALLO==2023,`ESTADO_(COMPENDIO)`) %>%
summarise(n=n())
table(prueba$CODIGO_DEL_PROYECTO)
setwd("C:/Users/carenas/Downloads")
prueba_mayusc2 = read_excel("C:/Users/carenas/Downloads/Antecedentes-Reportes Becas.xlsx", sheet="MATRIZ")
prueba_mayusc2 = read_excel("C:/Users/carenas/Downloads/Antecedentes-Reportes Becas.xlsx")
PR2 = mutate_if(prueba_mayusc2, is_character, toupper)
writexl::write_xlsx(PR2,"C:/Users/carenas/Downloads/Antecedentes-Reportes_Becas.xlsx")
prueba_mayusc2 = read_excel("C:/Users/carenas/Downloads/Admisibilidad-Reportes Becas.xlsx")
PR2 = mutate_if(prueba_mayusc2, is_character, toupper)
writexl::write_xlsx(PR2,"C:/Users/carenas/Downloads/Admisibilidad-Reportes_Becas.xlsx")
library(readxl)
library (writexl)
library(haven)
library(dplyr)
library(purrr)
library(stringr)
library(tidyr)
getwd()
prueba =read_excel("C:/Users/carenas/OneDrive - COMISION NACIONAL DE INVESTIGACION CIENTIFICA Y TECNOLOGICA/Escritorio/Prueba/Prueba _CDC.xlsx", sheet= "POSTULACIONES_2015_2023")
getwd()
library(tidyverse)
library(sf)
tbl_sii  <- readRDS("mz_constru_SII.rds") %>%
st_drop_geometry()
getwd()
setwd("C:/Users/carenas/OneDrive - COMISION NACIONAL DE INVESTIGACION CIENTIFICA Y TECNOLOGICA/Documentos")
tbl_sii  <- readRDS("mz_constru_SII.rds") %>%
st_drop_geometry()
view(tbl_sii)
head(tbl_sii)
tbl_sii %>%
select(n_com, oficinas, comercio, vivienda)
#negación
tbl_sii %>% select(-cod_com)
mi_comuna <- "SANTIAGO CENTRO"
mi_comuna2 = "PROVIDENCIA"
sii_com <- tbl_sii %>%
filter(n_com == mi_comuna |n_com == mi_comuna2)
head(sii_com, 5)
table(sii_com$n_com) #conteo
mis_comunas = c("LAS CONDES", "SANTIAG8O CENTRO", "LA SERENA")
SII_COM_MANY = tbl_sii %>%
filter(n_com %in% mis_comunas)
table(SII_COM_MANY$n_com)
tbl_resumen <-  tbl_sii %>%
group_by(n_com) %>%
summarise(Cantidad_mz = n(),
Total_of = sum(oficinas)) %>%
arrange(desc(Total_of)) # Ordenar
tbl_resumen
tbl_resumen <-  tbl_sii %>%
group_by(n_com) %>%
summarise(Cantidad_mz = n(),
Total_comercio = sum(comercio),
Total_of = sum(oficinas),
Dens_com = Total_comercio / sum(AREA)) %>%
arrange(desc(Total_comercio)) # Ordenar
tbl_resumen
options(scipen = 999) # evitas notación cientiífica
hist(sii_com$vivienda, breaks = 80,
main = "Histograma mt2 de Viviendas",
col = "orange")
library(ggplot2)
ggplot(sii_com, aes(x = vivienda)) +
geom_histogram(bins = 50, fill = "#225ea8", color ="black")
ggplot(sii_com, aes(x = vivienda)) +
geom_histogram(bins = 50, color = "#c7e9b4", fill = "#1d91c0")+
theme_bw()+ #fondo gris
labs(title="Histograma mt2 de Viviendas", x ="Mt2. Viviendas", y = "Frecuencias")+
theme(plot.title = element_text(face = "bold",colour= "gray60", size=10))
install.packages('rmarkdown')
install.packages('tinytex')
tinytex::install_tinytex()
y
install.packages('rmarkdown')
install.packages('tinytex')
tinytex::install_tinytex()
install.packages("tinytex")
install.packages('rmarkdown')
install.packages('tinytex')
tinytex::install_tinytex()
install.packages("tinytex")
setwd("~/")
setwd("~/")
install.packages("genero")
library(readxl)
library(stringr)
install.packages("stringr")
getwd()
list.files()
datos <- read_excel("SPI_INVESTIGADORES.xlsx")
library(readxl)
install.packages("readxl")
library(readxl)
library(stringr)
getwd()
list.files()
datos <- read_excel("SPI_INVESTIGADORES.xlsx")
View(datos)
names(datos)
source("~/.active-rstudio-document", echo=TRUE)
library(dplyr)
getwd()
list.files()
datos <- read_excel("SPI_INVESTIGADORES.xlsx")
names(datos)
nombres_completos <- datos%>%
mutate(genero = genero(NOMBREINVEQUIPO))
library(genero)
getwd()
list.files()
datos <- read_excel("SPI_INVESTIGADORES.xlsx")
names(datos)
nombres_completos <- datos%>%
mutate(genero = genero(NOMBREINVEQUIPO))
datos <- read_excel("SPI_INVESTIGADORES.xlsx")
names(datos)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
nombres_completos <- datos %>%
mutate(primer_nombre = word(NOMBREINVEQUIPO, 1, sep = " ")) %>%
mutate(genero = genero(primer_nombre))
View(nombres_completos)
library(readxl)
write.xlsx(nombres_completos, "genero_spi.xlsx")
install.packages("openxlsx")
library(openxlsx)
write.xlsx(nombres_completos, "genero_spi.xlsx")
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
getwd()
list.files()
datos <- read_excel("genero_spi.xlsx")
names(datos)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
conteo_duplicados <- datos %>%
group_by(NOMBREINVEQUIPO, SEXOINVEQUIPO) %>%
summarise(Cantidad = n())
print(conteo_duplicados)
conteo_distinto <- datos %>%
group_by(NOMBREINVEQUIPO) %>%
summarise(Cantidad = n_distinct(SEXOINVEQUIPO))
print(conteo_distinto)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
library(readxl)
library(stringr)
library(dplyr)
library(genero)
library(writexl)
library(openxlsx)
getwd()
list.files()
datos <- read_excel("genero_spi.xlsx")
names(datos)
conteo_distinto <- datos %>%
group_by(NOMBREINVEQUIPO) %>%
summarise(Cantidad = n_distinct(SEXOINVEQUIPO))
nombres_con_duplicados <- conteo_distinto %>%
filter(Cantidad >= 2)
print(nombres_con_duplicados)
write_xlsx(nombres_con_duplicados, path = "duplicados.xlsx")
library(readxl)
library(stringr)
library(dplyr)
library(genero)
library(writexl)
library(openxlsx)
getwd()
list.files()
datos <- read_excel("genero_spi.xlsx")
names(datos)
conteo_distinto <- datos %>%
group_by(NOMBREINVEQUIPO) %>%
summarise(Cantidad = n_distinct(SEXOINVEQUIPO))
nombres_con_duplicados <- conteo_distinto %>%
filter(Cantidad >= 2)
print(nombres_con_duplicados)
names(datos)
list.files()
datos <- read_excel("genero_spi.xlsx")
names(datos)
conteo_distinto <- datos %>%
group_by(RESPONSABLE PROYECTO) %>%
conteo_distinto <- datos %>%
group_by(RESPONSABLE PROYECTO)
conteo_distinto = datos %>%
group_by(RESPONSABLE PROYECTO)
getwd()
list.files()
datos <- read_excel("genero_spi.xlsx")
names(datos)
conteo_distinto = datos%>%
group_by(`RESPONSABLE PROYECTO`)
conteo_distinto = datos%>%
group_by(`RESPONSABLE PROYECTO`)%>%
summarise(Cantidad = n_distinct(SEXO_RESPONSABLE))
nombres_con_duplicados <- conteo_distinto %>%
filter(Cantidad >= 2)
print(nombres_con_duplicados)
# Combinar los dataframes en función de la columna "NombreResponsable" y "NombreEquipo"
datos_combinados <- inner_join(df_responsables, df_equipos, by = c("RESPONSABLE PROYECTO" = "NOMBREINVEQUIPO"))
# Combinar los datos en función de las columnas "RESPONSABLE PROYECTO" y "NOMBREINVEQUIPO"
datos_combinados <- inner_join(datos, datos, by = c("RESPONSABLE PROYECTO" = "NOMBREINVEQUIPO"))
# Filtrar solo los nombres que están repetidos en ambas columnas
nombres_repetidos <- datos_combinados %>%
filter(!is.na(SEXO_RESPONSABLE.x) & !is.na(SEXOINVEQUIPO.y))
# Verificar si los nombres repetidos tienen el mismo sexo asignado
nombres_repetidos$Mismo_Sexo <- nombres_repetidos$SEXO_RESPONSABLE.x == nombres_repetidos$SEXOINVEQUIPO.y
# Imprimir el resultado
# Imprimir el resultado
print(nombres_repetidos)
# Combinar los datos en función de las columnas "RESPONSABLE PROYECTO" y "NOMBREINVEQUIPO"
datos_combinados <- inner_join(datos, datos, by = c("RESPONSABLE PROYECTO" = "NOMBREINVEQUIPO"))
# Filtrar los nombres que tienen el sexo distinto asignado
nombres_con_sexos_distintos <- datos_combinados %>%
filter(!is.na(SEXO_RESPONSABLE.x) & !is.na(SEXOINVEQUIPO.y) & SEXO_RESPONSABLE.x != SEXOINVEQUIPO.y)
# Seleccionar solo las columnas necesarias para el resultado final
resultado <- nombres_con_sexos_distintos %>%
select(RESPONSABLE.PROYECTO.x, SEXO_RESPONSABLE.x, NOMBREINVEQUIPO.y, SEXOINVEQUIPO.y)
# Combinar los datos en función de las columnas "RESPONSABLE PROYECTO" y "NOMBREINVEQUIPO"
datos_combinados <- inner_join(datos, datos, by = c("RESPONSABLE PROYECTO" = "NOMBREINVEQUIPO"))
# Filtrar los nombres que tienen el sexo distinto asignado
nombres_con_sexos_distintos <- datos_combinados %>%
filter(!is.na(SEXO_RESPONSABLE.x) & !is.na(SEXOINVEQUIPO.y) & SEXO_RESPONSABLE.x != SEXOINVEQUIPO.y) %>%
select(RESPONSABLE.PROYECTO = RESPONSABLE.PROYECTO.x, SEXO_RESPONSABLE = SEXO_RESPONSABLE.x, NOMBREINVEQUIPO, SEXOINVEQUIPO.y)
# Combinar los datos en función de las columnas "RESPONSABLE PROYECTO" y "NOMBREINVEQUIPO"
datos_combinados <- inner_join(datos, datos, by = c("RESPONSABLE PROYECTO" = "NOMBREINVEQUIPO"))
# Combinar los datos en función de las columnas "RESPONSABLE PROYECTO" y "NOMBREINVEQUIPO"
datos_combinados <- inner_join(datos, datos, by = c("RESPONSABLE.PROYECTO" = "NOMBREINVEQUIPO"))
datos <- read_excel("genero_spi.xlsx") %>%
distinct(RESPONSABLE.PROYECTO, .keep_all = TRUE) %>%
distinct(NOMBREINVEQUIPO, .keep_all = TRUE)
datos <- read_excel("genero_spi.xlsx") %>%
distinct(RESPONSABLE.PROYECTO, .keep_all = TRUE) %>%
distinct(NOMBREINVEQUIPO, .keep_all = TRUE)
# Cargar los datos desde el archivo Excel y eliminar filas duplicadas
datos <- read_excel("genero_spi.xlsx")
datos <- read_excel("genero_spi.xlsx")%>%
distinct(RESPONSABLE PROYECTO, .keep_all = TRUE) %>%
datos <- read_excel("genero_spi.xlsx")%>%
distinct(RESPONSABLE PROYECTO, .keep_all = TRUE) %>%
datos = read_excel("genero_spi")
datos = read_excel("genero_spi.xlsx")
mezcla = datos%>%
distinct(`RESPONSABLE PROYECTO`, .keep_all = TRUE)%>%
distinct(NOMBREINVEQUIPO, .keep_all = TRUE)
# Combinar los datos en función de las columnas "RESPONSABLE PROYECTO" y "NOMBREINVEQUIPO"
datos_combinados <- inner_join(mezcla, mezcla, by = c("RESPONSABLE PROYECTO" = "NOMBREINVEQUIPO"))
View(datos_combinados)
nombres_con_sexos_distintos <- datos_combinados %>%
filter(!is.na(SEXO_RESPONSABLE.x) & !is.na(SEXOINVEQUIPO.y) & SEXO_RESPONSABLE.x != SEXOINVEQUIPO.y) %>%
select(RESPONSABLE.PROYECTO = RESPONSABLE.PROYECTO.x, SEXO_RESPONSABLE = SEXO_RESPONSABLE.x, NOMBREINVEQUIPO, SEXOINVEQUIPO.y)
# Filtrar los nombres que tienen el sexo distinto asignado
nombres_con_sexos_distintos <- datos_combinados %>%
filter(!is.na(SEXO_RESPONSABLE.x) & !is.na(SEXOINVEQUIPO.y) & SEXO_RESPONSABLE.x != SEXOINVEQUIPO.y) %>%
select(RESPONSABLE PROYECTO = RESPONSABLE PROYECTO.x, SEXO_RESPONSABLE = SEXO_RESPONSABLE.x, NOMBREINVEQUIPO, SEXOINVEQUIPO.y)
# Renombrar la columna SEXOINVEQUIPO.y a SEXOINVEQUIPO
colnames(nombres_con_sexos_distintos) <- c("RESPONSABLE PROYECTO", "SEXO_RESPONSABLE", "NOMBREINVEQUIPO", "SEXOINVEQUIPO")
# Imprimir el resultado
print(nombres_con_sexos_distintos)
write_xlsx(nombres_con_duplicados, path = "duplicados_2.xlsx")
write_xlsx(nombres_con_sexos_distintos, path = "duplicados_2.xlsx")
nombres_con_sexos_duplicados <- mezcla %>%
group_by(`RESPONSABLE PROYECTO`) %>%
filter(n_distinct(SEXO_RESPONSABLE) > 1) %>%
select(`RESPONSABLE PROYECTO`, SEXO_RESPONSABLE)
# Imprimir el resultado
print(nombres_con_sexos_duplicados)
setwd("C:/Users/carenas/COMISION NACIONAL DE INVESTIGACION CIENTIFICA Y TECNOLOGICA/DEGE - General/.DEGE/ESTUDIOS/BBDD/CONVENIO MINCYT")
library(haven)
library(readxl)
library(writexl)
library(dplyr)
library(purrr)
library(stringr)
library(tidyr)
prueba_mayusc2 = read_excel("C:/Users/carenas/COMISION NACIONAL DE INVESTIGACION CIENTIFICA Y TECNOLOGICA/DEGE - General/.DEGE/ESTUDIOS/BBDD/CONVENIO MINCYT/CONSOLIDAD_RT_2021_30.06.21_FORMATO.xlsx")
PR2 = mutate_if(prueba_mayusc2, is_character, toupper)
writexl::write_xlsx(PR2,"C:/Users/carenas/Downloads/MINCIENCIAS.xlsx")
prueba_mayusc2 = read_excel("C:/Users/carenas/COMISION NACIONAL DE INVESTIGACION CIENTIFICA Y TECNOLOGICA/DEGE - General/.DEGE/ESTUDIOS/BBDD/CONVENIO MINCYT/CONSOLIDAD_RT_2021_30.06.21_FORMATO.xlsx", sheet =("RT_2023_consolidado 30.06.23") )
prueba_mayusc2 = read_excel("C:/Users/carenas/COMISION NACIONAL DE INVESTIGACION CIENTIFICA Y TECNOLOGICA/DEGE - General/.DEGE/ESTUDIOS/BBDD/CONVENIO MINCYT/CONSOLIDAD_RT_2021_30.06.21_FORMATO.xlsx", sheet =("RT_2023_consolidado 30.06.23") )
PR2 = mutate_if(prueba_mayusc2, is_character, toupper)
writexl::write_xlsx(PR2,"C:/Users/carenas/Downloads/MINCIENCIAS.xlsx")
library(readxl)
library(dplyr)
setwd("C:/Users/carenas/OneDrive - COMISION NACIONAL DE INVESTIGACION CIENTIFICA Y TECNOLOGICA/Documentos")
list.files()
archivo1 <- read_excel("Comit_Evaluacion-Reportes Becas-2.xlsx")
archivo2 <- read_excel("Comit_Evaluacion-Reportes Becas-3.xlsx")
archivo3 <- read_excel("Comit_Evaluacion-Reportes Becas-4.xlsx")
archivo4 <- read_excel("Comit_Evaluacion-Reportes Becas.xlsx")
resultado <- rbind(archivo1, archivo2, archivo3, archivo4)
library(writexl)
write_xlsx(resultado, "resultado.xlsx")
resultado <- resultado %>%
mutate_all(toupper)
write_xlsx(resultado, "resultado.xlsx")
setwd("C:/Users/carenas/OneDrive - COMISION NACIONAL DE INVESTIGACION CIENTIFICA Y TECNOLOGICA/Escritorio/Github ANID/Colaboracion_Institucional")
files <- list.files(path = "C:/Users/carenas/OneDrive - COMISION NACIONAL DE INVESTIGACION CIENTIFICA Y TECNOLOGICA/Escritorio/Github ANID/Colaboracion_Institucional", pattern = "\\.xlsx$", full.names = TRUE)
lista_datos = list()
for (file in files) {
datos <- read_excel(file) %>%
mutate_all(as.character)  # Convierte todas las columnas a character
setwd("C:/Users/carenas/OneDrive - COMISION NACIONAL DE INVESTIGACION CIENTIFICA Y TECNOLOGICA/Escritorio/Github ANID/Colaboracion_Institucional")
library(readxl)
# Combina todos los datos en un solo dataframe
datos_combinados <- bind_rows(lista_datos)
datos_combinados = datos_combinados %>%
group_by(FOLIO)%>%
mutate(num_paises = n_distinct(PAISINSTITUCION))
proyectos_con_mas_de_un_pais <- datos_combinados %>%
filter(num_paises > 1)
proyectos_con_varios_paises <- proyectos_con_mas_de_un_pais %>%
group_by(FOLIO) %>%
filter(n_distinct(PAISINSTITUCION) > 1)
conteo_proyectos_por_pais <- proyectos_con_varios_paises %>%
group_by(PAISINSTITUCION) %>%
summarise(Num_Proyectos = n_distinct(FOLIO))
# Muestra el resultado
View(conteo_proyectos_por_pais)
library(readxl)
library(dplyr)
getwd()
setwd("C:/Users/carenas/OneDrive - COMISION NACIONAL DE INVESTIGACION CIENTIFICA Y TECNOLOGICA/Escritorio/Github ANID/Colaboracion_Institucional")
files <- list.files(path = "C:/Users/carenas/OneDrive - COMISION NACIONAL DE INVESTIGACION CIENTIFICA Y TECNOLOGICA/Escritorio/Github ANID/Colaboracion_Institucional", pattern = "\\.xlsx$", full.names = TRUE)
# Muestra el resultado
View(proyectos_con_varios_paises)
setwd("C:/Users/carenas/OneDrive - COMISION NACIONAL DE INVESTIGACION CIENTIFICA Y TECNOLOGICA/Escritorio/Github ANID/Colaboracion_Institucional")
files <- list.files(path = "C:/Users/carenas/OneDrive - COMISION NACIONAL DE INVESTIGACION CIENTIFICA Y TECNOLOGICA/Escritorio/Github ANID/Colaboracion_Institucional", pattern = "\\.xlsx$", full.names = TRUE)
getwd()
library(readxl)
library(readxl)
library(readxl)
library(dplyr)
setwd("C:/Users/carenas/OneDrive - COMISION NACIONAL DE INVESTIGACION CIENTIFICA Y TECNOLOGICA/Escritorio/Github ANID/Colaboracion_Institucional")
files <- list.files(path = "C:/Users/carenas/OneDrive - COMISION NACIONAL DE INVESTIGACION CIENTIFICA Y TECNOLOGICA/Escritorio/Github ANID/Colaboracion_Institucional", pattern = "\\.xlsx$", full.names = TRUE)
View(proyectos_con_varios_paises)
library(readxl)
library(dplyr)
library(tidyr)
library(writexl)
setwd("C:/Users/carenas/COMISION NACIONAL DE INVESTIGACION CIENTIFICA Y TECNOLOGICA/DEGE - General/.DEGE/ESTUDIOS/SOLICITUDES/2023/Internacionalizacion")
datos = read_excel("C:/Users/carenas/COMISION NACIONAL DE INVESTIGACION CIENTIFICA Y TECNOLOGICA/DEGE - General/.DEGE/ESTUDIOS/SOLICITUDES/2023/Internacionalizacion/resultados.xlsx")
library(readxl)
library(dplyr)
library(tidyr)
library(writexl)
library(tidyverse)
library(readxl)
library(writexl)
library(dplyr)
library(writexl)
setwd("C:/Users/carenas/COMISION NACIONAL DE INVESTIGACION CIENTIFICA Y TECNOLOGICA/DEGE - General/.DEGE/ESTUDIOS/SOLICITUDES/2023")
datos = read_excel("C:/Users/carenas/COMISION NACIONAL DE INVESTIGACION CIENTIFICA Y TECNOLOGICA/DEGE - General/.DEGE/ESTUDIOS/SOLICITUDES/2023/Investigadores_PNB.xlsx", sheet= "Hoja3")
names(datos)
datos <- datos %>%
mutate(nombre_completo = paste(`Primer Nombre`, `Apellido Materno`,`Apellido Paterno`, sep = " ")) %>%
mutate_all(toupper)%>%
filter(!is.na(email) & email != "")%>%
distinct(nombre_completo, Lineas_investigacion, .keep_all = TRUE)
write_xlsx(datos, "Invest_PNB.xlsx")
library(tidyverse)
library(readxl)
library(writexl)
library(dplyr)
library(writexl)
setwd("C:/Users/carenas/COMISION NACIONAL DE INVESTIGACION CIENTIFICA Y TECNOLOGICA/DEGE - General/.DEGE/ESTUDIOS/SOLICITUDES/2023")
datos = read_excel("C:/Users/carenas/COMISION NACIONAL DE INVESTIGACION CIENTIFICA Y TECNOLOGICA/DEGE - General/.DEGE/ESTUDIOS/SOLICITUDES/2023/Investigadores_PNB.xlsx", sheet= "Hoja3")
names(datos)
datos <- datos %>%
mutate(nombre_completo = paste(`Primer Nombre`, `Apellido Materno`,`Apellido Paterno`, sep = " ")) %>%
mutate_all(toupper)%>%
filter(!is.na(email) & email != "")%>%
distinct(nombre_completo, Lineas_investigacion, .keep_all = TRUE)
write_xlsx(datos, "Invest_PNB.xlsx")
library(tidyverse)
library(readxl)
library(writexl)
library(dplyr)
library(writexl)
setwd("C:/Users/carenas/COMISION NACIONAL DE INVESTIGACION CIENTIFICA Y TECNOLOGICA/DEGE - General/.DEGE/ESTUDIOS/SOLICITUDES/2023")
datos = read_excel("C:/Users/carenas/COMISION NACIONAL DE INVESTIGACION CIENTIFICA Y TECNOLOGICA/DEGE - General/.DEGE/ESTUDIOS/SOLICITUDES/2023/Investigadores_PNB.xlsx", sheet= "Hoja3")
names(datos)
datos <- datos %>%
mutate(nombre_completo = paste(`Primer Nombre`, `Apellido Materno`,`Apellido Paterno`, sep = " ")) %>%
mutate_all(toupper)%>%
filter(!is.na(email) & email != "")%>%
distinct(nombre_completo, Lineas_investigacion, .keep_all = TRUE)
write_xlsx(datos, "Invest_PNB.xlsx")
library(tidyverse)
library(readxl)
library(writexl)
library(dplyr)
library(writexl)
setwd("C:/Users/carenas/COMISION NACIONAL DE INVESTIGACION CIENTIFICA Y TECNOLOGICA/DEGE - General/.DEGE/ESTUDIOS/SOLICITUDES/2023")
datos = read_excel("C:/Users/carenas/COMISION NACIONAL DE INVESTIGACION CIENTIFICA Y TECNOLOGICA/DEGE - General/.DEGE/ESTUDIOS/SOLICITUDES/2023/Investigadores_PNB.xlsx", sheet= "Hoja3")
names(datos)
datos <- datos %>%
mutate(nombre_completo = paste(`Primer Nombre`, `Apellido Materno`,`Apellido Paterno`, sep = " ")) %>%
mutate_all(toupper)%>%
filter(!is.na(email) & email != "")%>%
distinct(nombre_completo, Lineas_investigacion, .keep_all = TRUE)
write_xlsx(datos, "Invest_PNB.xlsx")
